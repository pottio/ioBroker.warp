{
  "version": 3,
  "sources": ["../../src/warp/models.ts"],
  "sourcesContent": ["\r\nexport type WarpApiParameterType = 'enum' | 'number' | 'bool' | 'list' | 'button' | 'json' | 'text';\r\nexport type WarpApiActionType = 'update-value' | 'update-config' | 'send-command';\r\nexport type WarpApiButtonType = 'normal' | 'start' | 'stop';\r\nexport abstract class WarpProduct {\r\n    public static readonly warp1: string = 'warp1';\r\n    public static readonly warp2: string = 'warp2';\r\n    public static readonly all: string[] = [WarpProduct.warp1, WarpProduct.warp2];\r\n\r\n}\r\nexport abstract class WarpModel {\r\n    public static readonly smart: string = 'smart';\r\n    public static readonly pro: string = 'pro';\r\n    public static readonly all: string[] = [WarpModel.smart, WarpModel.pro];\r\n}\r\n\r\nexport interface WarpMessage {\r\n    topic: string;\r\n    payload: any;\r\n}\r\n\r\nexport class WarpApi {\r\n    public readonly id: string;\r\n    public readonly description: string;\r\n    public readonly sections: WarpApiSection[];\r\n    public readonly preventCreating: boolean;\r\n    constructor(id: string, description: string, preventCreating = false) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.sections = [];\r\n        this.preventCreating = preventCreating;\r\n    }\r\n\r\n    public add(topic: string, description: string, parameters: WarpApiParameter[]): void {\r\n        this.sections.push(new WarpApiSection(this, topic, description, parameters));\r\n    }\r\n}\r\n\r\nexport class WarpApiSection {\r\n    public readonly api: WarpApi;\r\n    public readonly topic: string;\r\n    public readonly description: string;\r\n    public readonly parameters: WarpApiParameter[];\r\n\r\n    constructor(api: WarpApi, topic: string, description: string, parameters: WarpApiParameter[]) {\r\n        this.api = api;\r\n        this.topic = topic;\r\n        this.description = description;\r\n        this.parameters = parameters;\r\n    }\r\n\r\n    public hasParametersFor(product: string, model: string): boolean {\r\n        return this.parameters.some(param => param.isRelevantFor(product, model));\r\n    }\r\n\r\n    public filterSpecificParameters(): WarpApiParameter[] {\r\n        return this.parameters.filter(param => (param.relevantForProducts !== WarpProduct.all || param.relevantForModels !== WarpModel.all));\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.topic.replace('/', '.');\r\n    }\r\n\r\n    public toString(): string {\r\n        return `id=${this.id} | parameters=${JSON.stringify(this.parameters)}`;\r\n    }\r\n}\r\n\r\nexport class WarpApiParameter {\r\n\r\n    public name: string;\r\n    public type: WarpApiParameterType;\r\n    public description: string;\r\n    public relevantForProducts: string[];\r\n    public relevantForModels: string[];\r\n    public actionTopic?: string;\r\n    public actionPayloadTemplate?: any;\r\n    public actionType?: WarpApiActionType;\r\n    public enumValues?: { [index: number]: string; };\r\n    public unit?: string;\r\n    public listItems?: WarpApiParameter[];\r\n    public min?: number;\r\n    public max?: number;\r\n    public buttonType?: WarpApiButtonType\r\n\r\n    constructor(name: string, type: WarpApiParameterType) {\r\n        this.name = name;\r\n        this.description = '';\r\n        this.type = type;\r\n        this.relevantForModels = WarpModel.all;\r\n        this.relevantForProducts = WarpProduct.all;\r\n    }\r\n\r\n    isRelevantFor(product: string, model: string): boolean {\r\n        return this.relevantForProducts.some(prod => prod === product) && this.relevantForModels.some(mod => mod === model);\r\n    }\r\n\r\n    hasActionType(actionType: WarpApiActionType): boolean {\r\n        return this.actionType === actionType;\r\n    }\r\n\r\n    hasAction(): boolean {\r\n        return this.actionType !== undefined;\r\n    }\r\n}\r\n\r\nexport class WarpApiParameterBuilder {\r\n\r\n    private _warpApiParameter: WarpApiParameter;\r\n\r\n    constructor(arpApiParameter: WarpApiParameter) {\r\n        this._warpApiParameter = arpApiParameter;\r\n    }\r\n    withDescription(description: string): WarpApiParameterBuilder {\r\n        this._warpApiParameter.description = description;\r\n        return this;\r\n    }\r\n    onlyWarp1(): WarpApiParameterBuilder {\r\n        this._warpApiParameter.relevantForProducts = [WarpProduct.warp1];\r\n        return this;\r\n    }\r\n    onlyWarp2(): WarpApiParameterBuilder {\r\n        this._warpApiParameter.relevantForProducts = [WarpProduct.warp2];\r\n        return this;\r\n    }\r\n    onlyModelSmart(): WarpApiParameterBuilder {\r\n        this._warpApiParameter.relevantForModels = [WarpModel.smart];\r\n        return this;\r\n    }\r\n    onlyModelPro(): WarpApiParameterBuilder {\r\n        this._warpApiParameter.relevantForModels = [WarpModel.pro];\r\n        return this;\r\n    }\r\n    actionUpdateValue(topic: string, payloadTemplate: any): WarpApiParameterBuilder {\r\n        this._warpApiParameter.actionTopic = topic;\r\n        this._warpApiParameter.actionType = 'update-value';\r\n        this._warpApiParameter.actionPayloadTemplate = payloadTemplate;\r\n        return this;\r\n    }\r\n    actionSendCommand(topic: string, payloadTemplate?: any): WarpApiParameterBuilder {\r\n        this._warpApiParameter.actionTopic = topic;\r\n        this._warpApiParameter.actionType = 'send-command';\r\n        this._warpApiParameter.actionPayloadTemplate = payloadTemplate;\r\n        return this;\r\n    }\r\n    actionUpdateConfig(topic: string): WarpApiParameterBuilder {\r\n        this._warpApiParameter.actionTopic = topic;\r\n        this._warpApiParameter.actionType = 'update-config';\r\n        return this;\r\n    }\r\n    item(param: WarpApiParameter): WarpApiParameterBuilder {\r\n        if (this._warpApiParameter.listItems) this._warpApiParameter.listItems.push(param);\r\n        return this;\r\n    }\r\n    build(): WarpApiParameter {\r\n        return this._warpApiParameter;\r\n    }\r\n}\r\n\r\nexport abstract class Param {\r\n    public static bool(name: string): WarpApiParameterBuilder {\r\n        const boolParam = new WarpApiParameter(name, 'bool');\r\n        return new WarpApiParameterBuilder(boolParam);\r\n    }\r\n    public static butt(name: string, buttonType: WarpApiButtonType = 'normal'): WarpApiParameterBuilder {\r\n        const buttonParam = new WarpApiParameter(name, 'button');\r\n        buttonParam.buttonType = buttonType;\r\n        return new WarpApiParameterBuilder(buttonParam);\r\n    }\r\n    public static enum(name: string, enumValues: { [index: number]: string }): WarpApiParameterBuilder {\r\n        const enumParam = new WarpApiParameter(name, 'enum');\r\n        enumParam.enumValues = enumValues;\r\n        return new WarpApiParameterBuilder(enumParam);\r\n    }\r\n    public static list(name: string): WarpApiParameterBuilder {\r\n        const listParam = new WarpApiParameter(name, 'list');\r\n        listParam.listItems = [];\r\n        return new WarpApiParameterBuilder(listParam);\r\n    }\r\n    public static numb(name: string, unit?: string, min?: number, max?: number): WarpApiParameterBuilder {\r\n        const numberParam = new WarpApiParameter(name, 'number');\r\n        numberParam.unit = unit;\r\n        numberParam.min = min;\r\n        numberParam.max = max;\r\n        return new WarpApiParameterBuilder(numberParam);\r\n    }\r\n    public static json(name: string): WarpApiParameterBuilder {\r\n        const jsonParam = new WarpApiParameter(name, 'json');\r\n        return new WarpApiParameterBuilder(jsonParam);\r\n    }\r\n    public static text(name: string): WarpApiParameterBuilder {\r\n        const textParam = new WarpApiParameter(name, 'text');\r\n        return new WarpApiParameterBuilder(textParam);\r\n    }\r\n}\r\n\r\nexport interface WarpApiMigration {\r\n    deletedParameterIds: string[];\r\n    changedParameterIds: string[];\r\n}"],
  "mappings": "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",
  "names": []
}
